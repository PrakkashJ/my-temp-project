name: Check Release Version

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

permissions:
  contents: read
  pull-requests: write  # Allows posting a status check comment

jobs:
  check-version-greater:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get latest GitHub release version
        id: latest-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_VERSION=$(gh release list --json tagName --jq '.[0].tagName' 2>/dev/null || echo "0.0.0")
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          LATEST_VERSION="${{ steps.latest-release.outputs.latest_version }}"
          
          VERSION_NUM=$(echo "$VERSION" | awk -F. '{ printf("%d%03d%03d\n", $1, $2, $3) }')
          LATEST_VERSION_NUM=$(echo "$LATEST_VERSION" | awk -F. '{ printf("%d%03d%03d\n", $1, $2, $3) }')

          echo "Package Version: $VERSION ($VERSION_NUM)"
          echo "Latest Release: $LATEST_VERSION ($LATEST_VERSION_NUM)"

          if [ "$VERSION_NUM" -le "$LATEST_VERSION_NUM" ]; then
            echo "merge_block=true" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "merge_block=false" >> $GITHUB_OUTPUT
          fi

      - name: Post failure comment if version is not greater
        if: steps.compare.outputs.merge_block == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "ðŸš« **Merge Blocked:** The version in package.json (${{ steps.version.outputs.version }}) is not greater than the latest release (${{ steps.latest-release.outputs.latest_version }}). Please update the version."
